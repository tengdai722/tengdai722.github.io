<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>从零开始Python实现卷积神经网络识别手写数字(MNIST)</title>
      <link href="/2019/09/17/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8BPython%E5%AE%9E%E7%8E%B0%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E8%AF%86%E5%88%AB%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97-MNIST/"/>
      <url>/2019/09/17/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8BPython%E5%AE%9E%E7%8E%B0%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E8%AF%86%E5%88%AB%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97-MNIST/</url>
      
        <content type="html"><![CDATA[<p>从零开始用Python实现一个卷积神经网络(CNN)来识别手写数字(MNIST)。代码 + 推导同时奉上。</p><a id="more"></a><p>推导过程清楚了之后开始我们的实现吧！</p><p>我们需要一个SimpleCNN类，并初始化需要的参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimpleCNN</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, input_dim=<span class="number">28</span>, num_class=<span class="number">10</span>, filter_size=<span class="number">3</span>, channel=<span class="number">3</span>)</span>:</span></span><br><span class="line">        self.input_dim = input_dim  <span class="comment"># 输入的维度，MNIST默认是28</span></span><br><span class="line">        self.num_class = num_class  <span class="comment"># 需要判断的类的数目，MNIST任务是10个，0-9</span></span><br><span class="line">        self.filter_size = filter_size  <span class="comment"># 卷积核的维度，这里取长宽相等，默认为3</span></span><br><span class="line">        self.channel = channel  <span class="comment"># 卷积核的深度(通道数)，默认3</span></span><br><span class="line">        self.output_dim = input_dim - filter_size + <span class="number">1</span>  <span class="comment"># 计算输出的维度，公式：N_out = N_input - D_kernel + 1</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 初始化参数，这里用了Xavier初始化</span></span><br><span class="line">        self.kernel = np.random.uniform(<span class="number">-1</span>, <span class="number">1</span>, (self.filter_size, self.filter_size, self.channel)) * \</span><br><span class="line">                      math.sqrt(<span class="number">6.</span> / (input_dim + self.output_dim))</span><br><span class="line">        self.params_w = np.random.uniform(<span class="number">-1</span>, <span class="number">1</span>, (self.num_class, self.output_dim, self.output_dim, self.channel)) * \</span><br><span class="line">                        math.sqrt(<span class="number">6.</span> / (self.input_dim + self.output_dim))</span><br><span class="line">        self.params_b = np.random.uniform(<span class="number">-1</span>, <span class="number">1</span>, self.num_class)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
